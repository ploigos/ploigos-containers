name: tssc-base-pr
on:
  pull_request:
    paths:
      - tssc-base/**
jobs:
  build:
    env:
      context: tssc-base
      image_name: tssc-base
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check and verify version.json
        id: check_version
        run: |
          echo -n ::set-output name=IMAGE_TAGS::
          echo $(jq -r '.version' ${context}/version.json)
      - name: Build image
        uses: docker/build-push-action@v1
        with:
          path: ${{ env.context }}
          push: false
          repository: ${{ env.image_name }}
          tags: ${{ steps.check_version.outputs.IMAGE_TAGS }}
      - name: Test image
        run: |
          echo "Running: docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} python3 --version"
          docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} python3 --version
          echo "Running: docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} pip3 --version"
          docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} pip3 --version
          echo "Running: docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} oc version"
          docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} oc version
          echo "Running: docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} git version"
          docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} git version
          echo "Running: docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} sops --version"
          docker run ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }} sops --version
